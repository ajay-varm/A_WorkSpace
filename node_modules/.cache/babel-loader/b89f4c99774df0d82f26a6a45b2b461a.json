{"ast":null,"code":"var _jsxFileName = \"/Users/ajayvarmabhupathiraju/Documents/main_project/a_workspace/src/Client/View/AfterLoginPages/Account.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport inNavbar from \"../../Model/NavBar/InNav\";\nimport Img from \"../../../library/coming_soon.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport InNavbar from \"../../Model/NavBar/InNav\";\nimport { UserAuth } from \"../../../Server/firebase/AuthContext\";\nimport Camera from \"../../Model/svg/Camera\";\nimport Delete from \"../../Model/svg/Delete\";\nimport { ref, getDownloadURL, uploadBytes, deleteObject } from \"firebase/storage\";\nimport { storage, db, auth } from \"../../../Server/firebase/FirebaseInitialize\";\nimport { async } from \"@firebase/util\";\nimport { getDoc, doc, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Account = () => {\n  _s();\n\n  const [img, setImg] = useState(\"\");\n  const [user, setUser] = useState({});\n  const history = useNavigate(\"\");\n  useEffect(() => {\n    getDoc(doc(db, \"Users\", auth.currentUser.uid)).then(docSnap => {\n      if (docSnap.exists) {\n        setUser(docSnap.data());\n      }\n    });\n\n    if (img) {\n      const uploadImg = async () => {\n        const imgRef = ref(storage, `avatar/${new Date().getTime()} - ${img.name}`);\n\n        try {\n          if (user.avatarPath) {\n            await deleteObject(ref(storage, user.avatarPath));\n          }\n\n          const snap = await uploadBytes(imgRef, img);\n          const url = await getDownloadURL(ref(storage, snap.ref.fullPath));\n          await updateDoc(doc(db, \"Users\", auth.currentUser.uid), {\n            avatar: url,\n            avatarPath: snap.ref.fullPath\n          });\n          setImg(\"\");\n        } catch (err) {\n          console.log(err.message);\n        }\n      };\n\n      uploadImg();\n    }\n  }, [img]);\n\n  const deleteImage = async () => {\n    try {\n      const confirm = window.confirm(\"Delete avatar?\");\n\n      if (confirm) {\n        await deleteObject(ref(storage, user.avatarPath));\n        await updateDoc(doc(db, \"Users\", auth.currentUser.uid), {\n          avatar: \"\",\n          avatarPath: \"\"\n        });\n        history.replace(\"/\");\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar || Img,\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"photo\",\n                children: /*#__PURE__*/_jsxDEV(Camera, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), user.avatar ? /*#__PURE__*/_jsxDEV(Delete, {\n                deleteImage: deleteImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 32\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                style: {\n                  display: \"none\"\n                },\n                id: \"photo\",\n                onChange: e => setImg(e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: user.UniqueId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Joined on: user.createdAt.toDate().toDateString()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Account, \"bdaEC24IO4Rk1NWLd5ZdC30CXS0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/ajayvarmabhupathiraju/Documents/main_project/a_workspace/src/Client/View/AfterLoginPages/Account.jsx"],"names":["React","useState","useEffect","inNavbar","Img","useNavigate","InNavbar","UserAuth","Camera","Delete","ref","getDownloadURL","uploadBytes","deleteObject","storage","db","auth","async","getDoc","doc","updateDoc","Account","img","setImg","user","setUser","history","currentUser","uid","then","docSnap","exists","data","uploadImg","imgRef","Date","getTime","name","avatarPath","snap","url","fullPath","avatar","err","console","log","message","deleteImage","confirm","window","replace","display","e","target","files","UniqueId","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport inNavbar from \"../../Model/NavBar/InNav\";\nimport Img from \"../../../library/coming_soon.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport InNavbar from \"../../Model/NavBar/InNav\";\nimport { UserAuth } from \"../../../Server/firebase/AuthContext\";\nimport Camera from \"../../Model/svg/Camera\";\nimport Delete from \"../../Model/svg/Delete\";\nimport {\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  deleteObject,\n} from \"firebase/storage\";\nimport { storage, db, auth } from \"../../../Server/firebase/FirebaseInitialize\";\nimport { async } from \"@firebase/util\";\nimport { getDoc, doc, updateDoc } from \"firebase/firestore\";\n\nconst Account = () => {\n  const [img, setImg] = useState(\"\");\n  const [user, setUser] = useState({});\n  const history = useNavigate(\"\");\n\n  useEffect(() => {\n    getDoc(doc(db, \"Users\", auth.currentUser.uid)).then((docSnap) => {\n      if (docSnap.exists) {\n        setUser(docSnap.data());\n      }\n    });\n\n    if (img) {\n      const uploadImg = async () => {\n        const imgRef = ref(\n          storage,\n          `avatar/${new Date().getTime()} - ${img.name}`\n        );\n        try {\n          if (user.avatarPath) {\n            await deleteObject(ref(storage, user.avatarPath));\n          }\n          const snap = await uploadBytes(imgRef, img);\n          const url = await getDownloadURL(ref(storage, snap.ref.fullPath));\n\n          await updateDoc(doc(db, \"Users\", auth.currentUser.uid), {\n            avatar: url,\n            avatarPath: snap.ref.fullPath,\n          });\n\n          setImg(\"\");\n        } catch (err) {\n          console.log(err.message);\n        }\n      };\n      uploadImg();\n    }\n  }, [img]);\n\n  const deleteImage = async () => {\n    try {\n      const confirm = window.confirm(\"Delete avatar?\");\n      if (confirm) {\n        await deleteObject(ref(storage, user.avatarPath));\n\n        await updateDoc(doc(db, \"Users\", auth.currentUser.uid), {\n          avatar: \"\",\n          avatarPath: \"\",\n        });\n        history.replace(\"/\");\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n  return (\n    <>\n      {/* <inNavbar /> */}\n      <section>\n        <div className=\"profile_container\">\n          <div className=\"img_container\">\n            <img src={user.avatar || Img} alt=\"avatar\" />\n            <div className=\"overlay\">\n              <div>\n                <label htmlFor=\"photo\">\n                  <Camera />\n                </label>\n                {user.avatar ? <Delete deleteImage={deleteImage} /> : null}\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  id=\"photo\"\n                  onChange={(e) => setImg(e.target.files[0])}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"text_container\">\n            <h3>{user.UniqueId}</h3>\n            <p>{user.email}</p>\n            <hr />\n            <small>Joined on: user.createdAt.toDate().toDateString()</small>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}