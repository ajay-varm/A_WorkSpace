{"ast":null,"code":"var _jsxFileName = \"/Users/ajayvarmabhupathiraju/Documents/main_project/a_workspace/src/Client/View/AfterLoginPages/Account.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport InNavbar from \"../../Model/NavBar/InNav\";\nimport Img from \"../../../library/coming_soon.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserAuth } from \"../../../Server/firebase/AuthContext\";\nimport Camera from \"../../Model/svg/Camera\";\nimport { storage } from \"../../../Server/firebase/FirebaseInitialize\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { async } from \"@firebase/util\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = () => {\n  _s();\n\n  const [img, setImg] = useState(\"\");\n  const [user, setUser] = useState();\n  const history = useHistory(\"\");\n  useEffect(() => {\n    getDoc(doc(db, \"users\", auth.currentUser.uid)).then(docSnap => {\n      if (docSnap.exists) {\n        setUser(docSnap.data());\n      }\n    });\n\n    if (img) {\n      const uploadImg = async () => {\n        const imgRef = ref(storage, `avatar/${new Date().getTime()} - ${img.name}`);\n\n        try {\n          if (user.avatarPath) {\n            await deleteObject(ref(storage, user.avatarPath));\n          }\n\n          const snap = await uploadBytes(imgRef, img);\n          const url = await getDownloadURL(ref(storage, snap.ref.fullPath));\n          await updateDoc(doc(db, \"users\", auth.currentUser.uid), {\n            avatar: url,\n            avatarPath: snap.ref.fullPath\n          });\n          setImg(\"\");\n        } catch (err) {\n          console.log(err.message);\n        }\n      };\n\n      uploadImg();\n    }\n  }, [img]);\n\n  const deleteImage = async () => {\n    try {\n      const confirm = window.confirm(\"Delete avatar?\");\n\n      if (confirm) {\n        await deleteObject(ref(storage, user.avatarPath));\n        await updateDoc(doc(db, \"users\", auth.currentUser.uid), {\n          avatar: \"\",\n          avatarPath: \"\"\n        });\n        history.replace(\"/\");\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.avatar || Img,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"photo\",\n              children: /*#__PURE__*/_jsxDEV(Camera, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), user.avatar ? /*#__PURE__*/_jsxDEV(Delete, {\n              deleteImage: deleteImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 30\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              style: {\n                display: \"none\"\n              },\n              id: \"photo\",\n              onChange: e => setImg(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Joined on: \", user.createdAt.toDate().toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Account, \"Y1VZaE/BhM5xjfbzlMa9XxiSFpg=\", true);\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/ajayvarmabhupathiraju/Documents/main_project/a_workspace/src/Client/View/AfterLoginPages/Account.jsx"],"names":["React","useState","useEffect","InNavbar","Img","useNavigate","UserAuth","Camera","storage","ref","getDownloadURL","uploadBytes","async","getDoc","doc","Account","img","setImg","user","setUser","history","useHistory","db","auth","currentUser","uid","then","docSnap","exists","data","uploadImg","imgRef","Date","getTime","name","avatarPath","deleteObject","snap","url","fullPath","updateDoc","avatar","err","console","log","message","deleteImage","confirm","window","replace","display","e","target","files","email","createdAt","toDate","toDateString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport InNavbar from \"../../Model/NavBar/InNav\";\nimport Img from \"../../../library/coming_soon.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserAuth } from \"../../../Server/firebase/AuthContext\";\nimport Camera from \"../../Model/svg/Camera\";\nimport { storage } from \"../../../Server/firebase/FirebaseInitialize\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { async } from \"@firebase/util\";\nimport { getDoc, doc } from \"firebase/firestore\";\n\nconst Account = () => {\n  const [img, setImg] = useState(\"\");\n  const [user, setUser] = useState();\n  const history = useHistory(\"\");\n\n  useEffect(() => {\n    getDoc(doc(db, \"users\", auth.currentUser.uid)).then((docSnap) => {\n      if (docSnap.exists) {\n        setUser(docSnap.data());\n      }\n    });\n\n    if (img) {\n      const uploadImg = async () => {\n        const imgRef = ref(\n          storage,\n          `avatar/${new Date().getTime()} - ${img.name}`\n        );\n        try {\n          if (user.avatarPath) {\n            await deleteObject(ref(storage, user.avatarPath));\n          }\n          const snap = await uploadBytes(imgRef, img);\n          const url = await getDownloadURL(ref(storage, snap.ref.fullPath));\n\n          await updateDoc(doc(db, \"users\", auth.currentUser.uid), {\n            avatar: url,\n            avatarPath: snap.ref.fullPath,\n          });\n\n          setImg(\"\");\n        } catch (err) {\n          console.log(err.message);\n        }\n      };\n      uploadImg();\n    }\n  }, [img]);\n\n  const deleteImage = async () => {\n    try {\n      const confirm = window.confirm(\"Delete avatar?\");\n      if (confirm) {\n        await deleteObject(ref(storage, user.avatarPath));\n\n        await updateDoc(doc(db, \"users\", auth.currentUser.uid), {\n          avatar: \"\",\n          avatarPath: \"\",\n        });\n        history.replace(\"/\");\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n  return (\n    <section>\n      <div className=\"profile_container\">\n        <div className=\"img_container\">\n          <img src={user.avatar || Img} alt=\"avatar\" />\n          <div className=\"overlay\">\n            <div>\n              <label htmlFor=\"photo\">\n                <Camera />\n              </label>\n              {user.avatar ? <Delete deleteImage={deleteImage} /> : null}\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                style={{ display: \"none\" }}\n                id=\"photo\"\n                onChange={(e) => setImg(e.target.files[0])}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"text_container\">\n          <h3>{user.name}</h3>\n          <p>{user.email}</p>\n          <hr />\n          <small>Joined on: {user.createdAt.toDate().toDateString()}</small>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}