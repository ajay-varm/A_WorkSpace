{"ast":null,"code":"var _jsxFileName = \"/Users/ajayvarmabhupathiraju/Documents/main_project/a_workspace/src/Server/firebase/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { auth, db } from \"../firebase/FirebaseInitialize\";\nimport { setDoc, doc, Timestamp, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState({});\n\n  const createUser = (Name, UniqueID, email, password) => {\n    createUserWithEmailAndPassword(auth, email, password);\n    onAuthStateChanged(auth, currentUser => {\n      setDoc(doc(db, \"Users\", currentUser.uid), {\n        uid: currentUser.uid,\n        Name: Name,\n        UniqueId: UniqueID,\n        email: email,\n        createdAt: Timestamp.fromDate(new Date()),\n        isOnline: true\n      });\n    });\n    return;\n  };\n\n  const LogIn = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  const OnlineChange = () => {\n    return onAuthStateChanged(auth, currentUser => {\n      updateDoc(doc(db, \"Users\", currentUser.uid), {\n        isOnline: true\n      });\n    });\n  };\n\n  const OfflineChange = () => {\n    onAuthStateChanged(auth, currentUser => {\n      updateDoc(doc(db, \"Users\", currentUser.uid), {\n        isOnline: false\n      });\n    }).then(signOut(auth));\n  };\n\n  const logout = () => {\n    return;\n  };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      console.log(currentUser);\n      setUser(currentUser);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      createUser,\n      user,\n      logout,\n      LogIn,\n      OnlineChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n\n_c = AuthContextProvider;\nexport const UserAuth = () => {\n  _s2();\n\n  return useContext(UserContext);\n};\n\n_s2(UserAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = UserAuth;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthContextProvider\");\n$RefreshReg$(_c2, \"UserAuth\");","map":{"version":3,"sources":["/Users/ajayvarmabhupathiraju/Documents/main_project/a_workspace/src/Server/firebase/AuthContext.js"],"names":["createContext","useContext","useEffect","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","auth","db","setDoc","doc","Timestamp","updateDoc","UserContext","AuthContextProvider","children","user","setUser","createUser","Name","UniqueID","email","password","currentUser","uid","UniqueId","createdAt","fromDate","Date","isOnline","LogIn","OnlineChange","OfflineChange","then","logout","unsubscribe","console","log","UserAuth"],"mappings":"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","sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { auth, db } from \"../firebase/FirebaseInitialize\";\nimport { setDoc, doc, Timestamp, updateDoc } from \"firebase/firestore\";\n\nconst UserContext = createContext();\n\nexport const AuthContextProvider = ({ children }) => {\n  const [user, setUser] = useState({});\n\n  const createUser = (Name, UniqueID, email, password) => {\n    createUserWithEmailAndPassword(auth, email, password);\n    onAuthStateChanged(auth, (currentUser) => {\n      setDoc(doc(db, \"Users\", currentUser.uid), {\n        uid: currentUser.uid,\n        Name: Name,\n        UniqueId: UniqueID,\n        email: email,\n        createdAt: Timestamp.fromDate(new Date()),\n        isOnline: true,\n      });\n    });\n    return;\n  };\n\n  const LogIn = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n  const OnlineChange = () => {\n    return onAuthStateChanged(auth, (currentUser) => {\n      updateDoc(doc(db, \"Users\", currentUser.uid), {\n        isOnline: true,\n      });\n    });\n  };\n  const OfflineChange = () => {\n    onAuthStateChanged(auth, (currentUser) => {\n      updateDoc(doc(db, \"Users\", currentUser.uid), {\n        isOnline: false,\n      });\n    }).then(signOut(auth));\n  };\n  const logout = () => {\n    return;\n  };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      console.log(currentUser);\n      setUser(currentUser);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <UserContext.Provider\n      value={{ createUser, user, logout, LogIn, OnlineChange }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const UserAuth = () => {\n  return useContext(UserContext);\n};\n"]},"metadata":{},"sourceType":"module"}